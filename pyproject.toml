# Copyright 2025 Lincoln Institute of Land Policy
# SPDX-License-Identifier: Apache-2.0

[project]
name = "scheduler"
version = "0.1.0"
description = "The geoconnex scheduler repository"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "beautifulsoup4>=4.12.3",
    "dagster-webserver>=1.9.10",
    "dagster>=1.9.10",
    "dagster-postgres>=0.25.10",
    "dagster-slack>=0.25.10",
    "jinja2>=3.1.5",
    "lakefs>=0.8.0",
    "lxml>=5.3.0",
    "minio>=7.2.15",
    "requests>=2.32.3",
    "docker>=7.1.0",
    "qlever>=0.5.23",
]

[dependency-groups]
dev = [
    "pytest-xdist>=3.6.1",
    "pyright>=1.1.398",
    "pytest-dotenv>=0.5.2",
    "pytest-cov>=6.0.0",
    "pytest>=8.3.4",
    "dagster-dg-cli>=1.11.0",
    "ruff>=0.13.1",
]


[tool.dg]
directory_type = "project"

[tool.dg.project]
root_module = "userCode"
code_location_target_module = "userCode.defs"

[tool.pytest.ini_options]
# we want to be able to override values in the .env file
# in order to test with custom environment variables
# without changing the base config
env_override_existing_values = 0
env_files = [
    ".env"
]

[tool.coverage.run]
# don't include tests 
omit = [
    "**/*_test.py",
    "test/",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]

# ruff will automatically format long lines
# and remove trailing whitespace; these ignores
# are simply to handle cases like large sparql
# query strings or other literals that cannot be
# formatted safely and thus we would end up ignoring anyways 
ignore = [
 "E501", # line too long 
 "W291"  # trailing whitespace
 ]

[tool.ruff.lint.isort]
# Sort imports taking into account case sensitivity.
case-sensitive = true
# Don't sort straight-style imports (like import sys) before from-style imports (like from itertools import groupby). Instead, sort the imports by module, independent of import style.
force-sort-within-sections = true
# Order imports by type, which is determined by case, in addition to alphabetically.
# By putting this to false we can force the order to be alphabetical.
order-by-type = false
# in some environments isort doesn't detect
# the docker package as a third party import
# seems like this is since the package uses dynamic
# import functionality; we put this here for the sake of consistency
known-third-party = ["docker"]

