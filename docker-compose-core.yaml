# Core services needed for running scheduler
# both locally for dev or in a cloud  environment for prod

services:
  dagster_postgres:
  # store the runtime dagster state
    image: postgres:11
    container_name: dagster_postgres
    networks:
      - dagster_network
    env_file: ".env"
    volumes:
      - dagster_postgres_data:/var/lib/postgresql/data

  dagster_user_code:
    image: dagster_user_code_image
    container_name: dagster_user_code
    restart: always
    environment:
      DAGSTER_CURRENT_IMAGE: "dagster_user_code_image"
    volumes:
      - ./code:/opt/dagster/app/code
    networks:
      - dagster_network
    env_file: ".env"

  dagster_webserver:
    image: dagster_webserver_image
    entrypoint:
      - dagster-webserver
      - -h
      - "0.0.0.0"
      - -p
      - "3000"
      - -w
      - workspace.yaml
    container_name: dagster_webserver
    ports:
      - "3000:3000"
    volumes: # Make docker client accessible so we can terminate containers from the webserver
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:/tmp/io_manager_storage
    networks:
      - dagster_network
    depends_on:
      - dagster_postgres
      - dagster_user_code
    env_file: ".env"

  dagster_daemon:
    image: dagster_daemon_image
    entrypoint:
      - dagster-daemon
      - run
    container_name: dagster_daemon
    restart: on-failure
    volumes: # Make docker client accessible so we can launch containers using host docker
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:/tmp/io_manager_storage
    networks:
      - dagster_network
    depends_on:
      - dagster_postgres
      - dagster_user_code
    env_file: ".env"

  headless:
    # image: chromedp/headless-shell:stable
    # stable after 105 causes "devtool: CreateURL: Using unsafe HTTP verb GET to invoke /json/new. This action supports only PUT verb.",
    # previous image: chromedp/headless-shell:105.0.5195.127 unclear if we can upgrade since neither seems to work
    # seems like might need to pull this before if on macos since we cant specify platform in docker compose
    #  docker run -it --platform linux/amd64 -p 9222:9222 --rm --entrypoint /bin/bash chromedp/headless-shell:latest
    image: chromedp/headless-shell:latest
    ports:
      - 9222:9222
    environment:
      - SERVICE_PORTS=9222
    networks:
      - headless_gleanerio
      - dagster_network

networks:
  dagster_network:
    external: true
  headless_gleanerio:
    name: headless_gleanerio
    external: true

volumes:
  dagster_postgres_data:
