###
# This docker compose file separates all dagster services into separate containers
# to allow for easier debugging and scaling.
###

services:
  dagster_postgres:
    # store the runtime dagster state
    image: postgres:11
    container_name: dagster_postgres
    networks:
      - dagster_network
    env_file: "../.env"
    volumes:
      - dagster_postgres_data:/var/lib/postgresql/data

  dagster_webserver:
    image: dagster_webserver_image
    entrypoint:
      - dagster-webserver
      - -h
      - "0.0.0.0"
      - -p
      - "3000"
      - -w
      - "workspace.yaml"
    container_name: dagster_webserver
    ports:
      - "3000:3000"
    volumes: # Make docker client accessible so we can terminate containers from the webserver
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:/tmp/io_manager_storage
    networks:
      - dagster_network
    depends_on:
      - dagster_postgres
      - dagster_user_code
    env_file: "../.env"

  dagster_daemon:
    image: dagster_daemon_image
    entrypoint:
      - dagster-daemon
      - run
    container_name: dagster_daemon
    restart: on-failure
    volumes: # Make docker client accessible so we can launch containers using host docker
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:/tmp/io_manager_storage
    networks:
      - dagster_network
    depends_on:
      - dagster_postgres
      - dagster_user_code
    env_file: "../.env"

networks:
  dagster_network:
    external: true
    driver: overlay

volumes:
  dagster_postgres_data:
